<Window x:Class="MetalBuddy.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MetalBuddy"
        mc:Ignorable="d"
        Title="Metal Buddy" Height="300" Width="500" MinWidth="500" MinHeight="300" 
        AllowsTransparency="True" WindowStyle="None" ResizeMode="CanResizeWithGrip" 
        Background="#FF000000" Foreground="White" BorderBrush="White" BorderThickness="1px" MouseDown="title_MouseLeftButtonDown">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#00000000"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#00000000"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#00000000"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#00000000"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#00000000"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#00000000"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#00000000"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#00000000"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#00000000"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#00000000"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#00000000"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#00000000"/>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="MatrixBoldSmallCaps"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="#00000000" BorderBrush="White">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Margin="1" Opacity="0" Stretch="None" Fill="White"/>
                                    <Rectangle x:Name="indeterminateMark" Margin="2" Opacity="0" Fill="#00000000"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFB3FFB3"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="White"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFB3FFB3"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="White"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFB3FFB3"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="White"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#00000000"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#00000000"/>
        <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="2,2,2,-5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#00000000" Offset="0.0"/>
            <GradientStop Color="#00000000" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#00000000"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#00000000" Offset="0.0"/>
            <GradientStop Color="#00000000" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#00000000"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#00000000"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#00000000"/>
        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="0" Background="Transparent" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#00000000" Offset="0.0"/>
                                            <GradientStop Color="#00000000" Offset="1.0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="#00000000"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="#00000000"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="#00000000"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="#00000000"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="TextElement.Foreground" Value="Gray"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                <Setter Property="TextElement.Foreground" Value="#FF1BFF1B"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Background="Black" MinWidth="500" MinHeight="300" ScrollViewer.VerticalScrollBarVisibility="Disabled">
        <Button Width="20" Height="17" Margin="0,5,10,0" Click="Button_Click" Background="Black" BorderBrush="#00000000" VerticalAlignment="Top" HorizontalAlignment="Right">
            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_checkmark" Width="20" Height="17" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0" Background="Black" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path Width="20" Height="17" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                                  Data="F1 M 32.222,33.4875L 39.1886,40.0582L 51.3802,26.1251L 54.7052,29.0542L 39.5845,47.5L 28.897,36.8125L 32.222,33.4875 Z M 24,27L 48.5,27L 45.5,30L 27,30L 27,49L 46,49L 46,42.5L 49,38.75L 49,52L 24,52L 24,27 Z "/>
            </Canvas>
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Lime"/>
                            <Setter Property="Background" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="#FF008506"/>
                            <Setter Property="Background" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <TextBlock TextWrapping="Wrap" Margin="5,2,390,281" FontFamily="MatrixBoldSmallCaps" FontSize="18" Panel.ZIndex="2" TextOptions.TextFormattingMode="Display"><Run x:Name="TitleText" Text=""/><LineBreak/><Run/></TextBlock>
        <Rectangle Height="2" VerticalAlignment="Top" Margin="0,29,30,0" Panel.ZIndex="2">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                            <RotateTransform Angle="90.2" CenterY="0.5" CenterX="0.5"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStop Color="#00000000"/>
                    <GradientStop Color="#00000000" Offset="1"/>
                    <GradientStop Color="White" Offset="0.685"/>
                    <GradientStop Color="White" Offset="0.306"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <CheckBox Name="EnableOverlayCB" Checked="EnableOverlayCB_Checked" Unchecked="EnableOverlayCB_Unchecked" Content="Enable Overlay" HorizontalAlignment="Left" Margin="10,36,0,0" VerticalAlignment="Top" Width="230" VerticalContentAlignment="Center" Height="25" FontSize="20"/>

        <TabControl Margin="256,5,26,10" Background="Black" Style="{DynamicResource TabControlStyle}" BorderBrush="Black" Foreground="White">
            <TabItem Header="X" BorderBrush="#00000000" Style="{DynamicResource TabItemStyle}">
                <Grid Margin="0,0,204,262"></Grid>
            </TabItem>
            <TabItem Header="Objects" BorderBrush="#00000000" Style="{DynamicResource TabItemStyle}">
                <Grid Margin="0">
                    <Border Margin="0,10" CornerRadius="5">
                        <Border.Background>
                            <RadialGradientBrush>
                                <GradientStop Color="Black" Offset="1"/>
                                <GradientStop Color="#FF15002E"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                    <CheckBox Name="ShowAetherCurrents" Width="auto" Height="20" Checked="ShowAetherCurrents_Checked" Unchecked="ShowAetherCurrents_Unchecked" VerticalContentAlignment="Center" FontSize="18" FontWeight="UltraLight" VerticalAlignment="Top" Margin="5" Content="Aether Currents"/>
                </Grid>
            </TabItem>
            <TabItem Header="NPC" BorderBrush="#00000000" Style="{DynamicResource TabItemStyle}">
                <Grid Margin="0">
                    <Border Margin="0,10" CornerRadius="5">
                        <Border.Background>
                            <RadialGradientBrush>
                                <GradientStop Color="Black" Offset="1"/>
                                <GradientStop Color="#FF15002E"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem Header="Players" BorderBrush="#00000000" Style="{DynamicResource TabItemStyle}">
                <Grid Margin="0">
                    <Border Margin="0,10" CornerRadius="5">
                        <Border.Background>
                            <RadialGradientBrush>
                                <GradientStop Color="Black" Offset="1"/>
                                <GradientStop Color="#FF15002E"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                    <CheckBox x:Name="AttackablePlayers" Width="auto" Height="20" Checked="AttackablePlayers_Checked" Unchecked="AttackablePlayers_Unchecked" VerticalContentAlignment="Center" FontSize="18" FontWeight="UltraLight" VerticalAlignment="Top" Margin="5" Content="PvP Flagged PC's"/>
                </Grid>
            </TabItem>
            <TabItem Header="Stats" BorderBrush="#00000000" Style="{DynamicResource TabItemStyle}">
                <Grid Margin="0">
                    <Border Margin="0,10" CornerRadius="5">
                        <Border.Background>
                            <RadialGradientBrush>
                                <GradientStop Color="Black" Offset="1"/>
                                <GradientStop Color="#FF15002E"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                    <TextBlock TextWrapping="Wrap" Text="X: " Margin="10,10,0,0" Width="12" Height="17" HorizontalAlignment="Left" VerticalAlignment="Top" TextAlignment="Center"/>
                    <TextBox x:Name="OverlayXPosBox"  HorizontalAlignment="Left" Height="17" Margin="22,10,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="37" TextChanged="OverlayXPosBox_TextChanged"/>
                    <TextBlock TextWrapping="Wrap" Text="Y: " Margin="10,27,0,0" Width="12" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top" TextAlignment="Center"/>
                    <TextBox x:Name="OverlayYPosBox"  HorizontalAlignment="Left" Height="17" Margin="22,26,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="37" TextChanged="OverlayYPosBox_TextChanged"/>
                    <TextBox x:Name="OverlayAlert"  HorizontalAlignment="Left" Height="17" Margin="64,27,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="90" TextChanged="OverlayAlert_TextChanged"/>
                    <TextBlock TextWrapping="Wrap" Text="Alert for Object " Margin="64,11,60,0" Height="16" VerticalAlignment="Top" TextAlignment="Center" Foreground="#FFFF1B1B"/>
                    <TextBlock TextWrapping="Wrap" Text="X: " Margin="155,10,0,0" Width="12" Height="17" HorizontalAlignment="Left" VerticalAlignment="Top" TextAlignment="Center" Foreground="#FFFF1B1B"/>
                    <TextBox x:Name="AlertXPosBox"  HorizontalAlignment="Left" Height="17" Margin="167,10,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="37" TextChanged="AlertXPosBox_TextChanged"/>
                    <TextBlock TextWrapping="Wrap" Text="Y: " Margin="155,27,0,0" Width="12" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top" TextAlignment="Center" Foreground="#FFFF1B1B"/>
                    <TextBox x:Name="AlertYPosBox"  HorizontalAlignment="Left" Height="17" Margin="167,26,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="37" TextChanged="AlertYPosBox_TextChanged"/>
                </Grid>
            </TabItem>
        </TabControl>
        <CheckBox x:Name="ForegroundOnly" Checked="ForegroundOnly_Checked" Unchecked="ForegroundOnly_Unchecked" Content="Only in Foreground" HorizontalAlignment="Left" Margin="10,265,0,0" VerticalAlignment="Top" Width="230" VerticalContentAlignment="Center" Height="25" FontSize="20"/>
        <CheckBox x:Name="EnableStats" Checked="EnableStats_Checked" Unchecked="EnableStats_Unchecked" Content="Enable Stats" HorizontalAlignment="Left" Margin="10,61,0,0" VerticalAlignment="Top" Width="230" VerticalContentAlignment="Center" Height="25" FontSize="20"/>


    </Grid>
</Window>